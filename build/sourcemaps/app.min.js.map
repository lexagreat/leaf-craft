{"version":3,"sources":["app.js"],"names":["maskOptions","mask","document","querySelectorAll","length","forEach","item","IMask","body","burgerWork","burger","querySelector","menu","onclick","classList","toggle","homePage","btn","text","why","Swiper","slidesPerView","spaceBetween","pagination","el","type","navigation","prevEl","nextEl","Select","placeholder","data","id","value","[object Object]","select","add","tabs","accordion","linkSelector","contentSelector","inputs","contents","addEventListener","checked","remove","getAttribute","openLinks","i","openLink","j","contains","slideHide","content","slideShow","casesPage","selects","attr","casePage","slider","thumbs","loop","watchSlidesVisibility","watchSlidesProgress","renderCustom","swiper","current","total","duration","height","offsetHeight","style","window","setTimeout","newsSection","breakpoints","1025","test","navigator","userAgent","innerWidth","selector","options","this","$el","selectedId","render","setup","innerHTML","getTemplate","clickHandler","bind","$value","event","target","dataset","closest","find","console","log","image","close","onSelect","open","items","map","cls","join"],"mappings":"AAAA,MAAAA,YAAA,CACAC,KAAA,cAIAC,SAAAC,iBAAA,gBAAAC,QACAF,SAAAC,iBAAA,gBAAAE,QAAAC,IACAC,MAAAD,EAAAN,eAGA,MAAAQ,KAAAN,SAAAM,KAqBA,SAAAC,aACA,MAAAC,EAAAR,SAAAS,cAAA,mBACA,IAAAD,EAAA,OACA,MAAAE,EAAAV,SAAAS,cAAA,gBACAD,EAAAG,QAAA,KACAH,EAAAI,UAAAC,OAAA,UACAH,EAAAE,UAAAC,OAAA,UACAP,KAAAM,UAAAC,OAAA,SAGA,SAAAC,YACA,WACA,MAAAC,EAAAf,SAAAS,cAAA,0BACAO,EAAAhB,SAAAS,cAAA,mBACAM,IACAA,EAAAJ,QAAA,KACAI,EAAAH,UAAAC,OAAA,UACAG,EAAAJ,UAAAC,OAAA,YA4CAI,GAxCAjB,SAAAS,cAAA,0BACA,IAAAS,OAAAlB,SAAAS,cAAA,yBAAA,CACAU,cAAA,EAEAC,aAAA,GAEAC,WAAA,CACAC,GAAA,mCACAC,KAAA,eAEAC,WAAA,CACAC,OAAA,8BACAC,OAAA,iCAKA1B,SAAAS,cAAA,yBACA,IAAAkB,OAAA,uBAAA,CACAC,YAAA,wBAEAC,KAAA,CACA,CACAC,GAAA,gBACAC,MAAA,eAEA,CACAD,GAAA,iBACAC,MAAA,eAEA,CACAD,GAAA,gBACAC,MAAA,gBAGAC,SAAA5B,EAAA6B,GACAA,EAAArB,UAAAsB,IAAA,aAOAC,KAAA,8BAAA,iCACAC,UAAA,0BAAA,0BAEA,SAAAD,KAAAE,EAAAC,GACA,MAAAC,EAAAvC,SAAAC,iBAAAoC,GACAG,EAAAxC,SAAAC,iBAAAqC,GACA,IAAAP,EACAQ,EAAArC,QACAqC,EAAApC,QAAAC,IACAA,EAAAqC,iBAAA,SAAA,KACArC,EAAAsC,UACAX,EAAA3B,EAAA2B,OAEAS,EAAArC,QAAAC,IACAA,EAAAQ,UAAA+B,OAAA,UACAvC,EAAAwC,aAAA,aAAAb,GACA3B,EAAAQ,UAAAsB,IAAA,gBAOA,SAAAE,UAAAC,EAAAC,GAEA,MAAAO,EAAA7C,SAAAC,iBAAA,GAAAoC,GAEAG,EAAAxC,SAAAC,iBAAA,GAAAqC,GACA,GAAAO,EAAA3C,OAAA,EACA,IAAA,IAAA4C,EAAA,EAAAA,EAAAD,EAAA3C,OAAA4C,IAAA,CACA,IAAAC,EAAAF,EAAAC,GACAC,EAAAN,iBAAA,QAAA,KAEA,IAAA,IAAAO,EAAA,EAAAA,EAAAR,EAAAtC,OAAA8C,IAAA,CAEA,GAAAR,EAAAQ,GAAApC,UAAAqC,SAAA,cACA,OAGAC,UAAAV,EAAAQ,IAEA,IAAA,IAAAA,EAAA,EAAAA,EAAAH,EAAA3C,OAAA8C,IACAH,EAAAG,GAAApC,UAAA+B,OAAA,UAGA,IAAAQ,EAAAX,EAAAM,GAEAK,EAAAvC,UAAAqC,SAAA,gBAEAE,EAAAvC,UAAAqC,SAAA,iBACAF,EAAAnC,UAAA+B,OAAA,UAEAI,EAAAnC,UAAAsB,IAAA,UAGAkB,UAAAD,OAKA,SAAAE,YACA,MAAAC,EAAAtD,SAAAC,iBAAA,iCAEAqD,EAAApD,QACAoD,EAAAnD,QAAA8B,IACAA,EAAAtB,QAAA,KACAsB,EAAArB,UAAAC,OAAA,UACA,IAAA0C,EAAAtB,EAAAW,aAAA,OAEA5C,SAAAS,cAAA,gBAAA8C,OAEA3C,UAAAC,OAAA,aAIA,SAAA2C,WACA,MAAAC,EAAAzD,SAAAS,cAAA,8BACA,IAAAgD,EAAA,OAIA,IAAAC,EAAA,IAAAxC,OAAA,6BAAA,CACAC,cAAA,OACAC,aAAA,GACAuC,MAAA,EACAC,uBAAA,EACAC,qBAAA,IAEA,IAAA3C,OAAAuC,EAAA,CACAtC,cAAA,EACAC,aAAA,GACAuC,MAAA,EACAtC,WAAA,CACAC,GAAA,yBACAC,KAAA,SACAuC,aAAA,SAAAC,EAAAC,EAAAC,GACA,MAAA,SAAAD,uCAAAC,aAGAzC,WAAA,CACAC,OAAA,mBACAC,OAAA,oBAEAgC,OAAA,CACAK,OAAAL,KAIA,SAAAN,UAAA9B,EAAA4C,EAAA,KAEA,GACA5C,EAAAV,UAAAqC,SAAA,eACA3B,EAAAV,UAAAqC,SAAA,iBAEA,OAGA3B,EAAAV,UAAA+B,OAAA,YAEA,MAAAwB,EAAA7C,EAAA8C,aAEA9C,EAAA+C,MAAA,OAAA,EAEA/C,EAAA+C,MAAA,SAAA,SAEA/C,EAAA+C,MAAA,WAAA,UAAAH,WAEA5C,EAAAV,UAAAsB,IAAA,cAEAZ,EAAA8C,aAEA9C,EAAA+C,MAAA,OAAAF,EAAA,KAEAG,OAAAC,WAAA,KAEAjD,EAAAV,UAAA+B,OAAA,cAEArB,EAAAV,UAAAsB,IAAA,YACAZ,EAAAV,UAAAsB,IAAA,iBAEAZ,EAAA+C,MAAA,OAAA,GACA/C,EAAA+C,MAAA,WAAA,GACA/C,EAAA+C,MAAA,SAAA,IACAH,GAEA,SAAAhB,UAAA5B,EAAA4C,EAAA,MAGA5C,EAAAV,UAAAqC,SAAA,eACA3B,EAAAV,UAAAqC,SAAA,mBAKA3B,EAAA+C,MAAA,OAAA/C,EAAA8C,aAAA,KAEA9C,EAAA8C,aAEA9C,EAAA+C,MAAA,OAAA,EAEA/C,EAAA+C,MAAA,SAAA,SAEA/C,EAAA+C,MAAA,WAAA,UAAAH,WAEA5C,EAAAV,UAAA+B,OAAA,YACArB,EAAAV,UAAA+B,OAAA,iBAEArB,EAAAV,UAAAsB,IAAA,cAEAoC,OAAAC,WAAA,KAEAjD,EAAAV,UAAA+B,OAAA,cAEArB,EAAAV,UAAAsB,IAAA,YAEAZ,EAAA+C,MAAA,OAAA,GACA/C,EAAA+C,MAAA,WAAA,GACA/C,EAAA+C,MAAA,SAAA,IACAH,IAEA,SAAAM,cACA,IAAAxE,SAAAS,cAAA,yBAAA,OACA,IAAAS,OAAAlB,SAAAS,cAAA,yBAAA,CACAU,cAAA,EACAsD,YAAA,CACAC,KAAA,CACAvD,cAAA,EACAC,aAAA,KAGAI,WAAA,CACAC,OAAA,sBACAC,OAAA,yBAGA,IAAA1B,SAAAS,cAAA,sBAAA,OACA,IAAAS,OAAAlB,SAAAS,cAAA,sBAAA,CACAU,cAAA,EACAsD,YAAA,CACAC,KAAA,CACAvD,cAAA,EACAC,aAAA,KAGAI,WAAA,CACAC,OAAA,mBACAC,OAAA,sBAlSA1B,SAAAyC,iBAAA,mBAAA,KACA,iCAAAkC,KAAAC,UAAAC,YAIA7E,SAAAM,KAAAM,UAAAsB,IAAA,kBAEApB,WACAwD,OAAAQ,YAAA,KACA1C,UAAA,qBAAA,2BAEAkC,OAAAQ,YAAA,MACA1C,UAAA,0CAAA,oBAEA7B,aACA6B,UAAA,2BAAA,8BACAoC,cACAnB,YACAG,aAoRA,MAAA7B,OACAK,YAAA+C,EAAAC,GACAC,KAAAC,IAAAlF,SAAAS,cAAAsE,GACAE,KAAAD,QAAAA,EACAC,KAAAE,WAAAH,EAAAG,WAEAF,KAAAG,SACAH,KAAAI,QAEArD,SACAiD,KAAAC,IAAAtE,UAAAsB,IAAA,UACA,MAAAN,YAAAA,EAAAC,KAAAA,EAAAsD,WAAAA,GAAAF,KAAAD,QACAC,KAAAC,IAAAI,UAAAL,KAAAM,YAAA1D,EAAAD,EAAAuD,GACAvD,GACAqD,KAAAC,IACAzE,cAAA,uBACAG,UAAAsB,IAAA,eAGAF,QACAiD,KAAAO,aAAAP,KAAAO,aAAAC,KAAAR,MACAA,KAAAC,IAAAzC,iBAAA,QAAAwC,KAAAO,cACAP,KAAAS,OAAAT,KAAAC,IAAAzE,cAAA,4BAEAuB,aAAA2D,GACA,MAAApE,KAAAA,GAAAoE,EAAAC,OAAAC,QACA,GAAA,UAAAtE,EACA0D,KAAApE,cACA,GAAA,SAAAU,EAAA,CACA,MAAAO,GAAAA,GAAA6D,EAAAC,OAAAC,QACAZ,KAAAhD,OAAAH,QACA,SAAAP,GAEA,WAAAA,GAEAoE,EAAAC,OAAAE,QAAA,qBAHAb,KAAApE,SAKAmD,cACA,OAAAiB,KAAAD,QAAAnD,KAAAkE,KAAA3F,GAAAA,EAAA0B,KAAAmD,KAAAE,YAEAnD,OAAAF,GACAmD,KAAAC,IACAzE,cAAA,uBACAG,UAAA+B,OAAA,eACAsC,KAAAE,WAAArD,EACAkE,QAAAC,IAAAhB,KAAAS,QACAT,KAAAS,OAAAJ,UAAA,aAAAL,KAAAjB,QAAAkC,WAAAjB,KAAAjB,QAAAjC,QACAkD,KAAAC,IAAAjF,iBAAA,sBAAAE,QAAAC,IACAA,EAAAQ,UAAA+B,OAAA,cAEAsC,KAAAC,IACAzE,cAAA,aAAAwE,KAAAjB,QAAAlC,OACAlB,UAAAsB,IAAA,YACA+C,KAAAkB,QAEAlB,KAAAD,QAAAoB,UACAnB,KAAAD,QAAAoB,SAAAnB,KAAAjB,QAAAiB,KAAAC,KAGAlD,OACAiD,KAAAC,IAAAtE,UAAAsB,IAAA,QAEAF,QACAiD,KAAAC,IAAAtE,UAAA+B,OAAA,QAEAX,SACAiD,KAAAC,IAAAtE,UAAAqC,SAAA,QACAgC,KAAAkB,QAEAlB,KAAAoB,OAGArE,YAAAH,EAAAD,EAAA,gBAAAuD,GACA,MAAAmB,EAAAzE,EAAA0E,IAAAnG,IACA,IAAAoG,EAAA,GAKA,OAJApG,EAAA0B,KAAAqD,IACAvD,EAAA,aAAAqD,KAAAjB,QAAAkC,WAAAjB,KAAAjB,QAAAjC,QACAyE,EAAA,YAEA,2BAAAA,gCAAApG,EAAA0B,iBAAA1B,EAAA8F,WAAA9F,EAAA2B,eAEA,MAAA,yLAIAH,iYASA0E,EAAAG,KAAA","file":"../js/app.min.js","sourcesContent":["const maskOptions = {\n   mask: \"000-00-000\",\n   // lazy: false,  // make placeholder always visible\n   // placeholderChar: '0'     // defaults to '_'\n};\nif (document.querySelectorAll(\"[data-phone]\").length) {\n   document.querySelectorAll(\"[data-phone]\").forEach((item) => {\n      const mask = IMask(item, maskOptions);\n   });\n}\nconst body = document.body;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n   let isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n   if (isSafari) {\n      // Если Safari, добавляем класс к body или другому элементу\n      document.body.classList.add(\"safari-browser\");\n   }\n   homePage();\n   if (window.innerWidth <= 568) {\n      accordion(\".footer__subheader\", \".footer__item .collapse\");\n   }\n   if (window.innerWidth <= 1024) {\n      accordion(\".header__item:has(.header-services) > a\", \".header-services\");\n   }\n   burgerWork();\n   accordion(\".service-process__header\", \".service-process__collapse\");\n   newsSection();\n   casesPage();\n   casePage();\n});\nfunction burgerWork() {\n   const burger = document.querySelector(\".header__burger\");\n   if (!burger) return;\n   const menu = document.querySelector(\".header-menu\");\n   burger.onclick = () => {\n      burger.classList.toggle(\"active\");\n      menu.classList.toggle(\"active\");\n      body.classList.toggle(\"lock\");\n   };\n}\nfunction homePage() {\n   function why() {\n      const btn = document.querySelector(\".home-why__main button\");\n      const text = document.querySelector(\".home-why__text\");\n      if (!btn) return;\n      btn.onclick = () => {\n         btn.classList.toggle(\"active\");\n         text.classList.toggle(\"active\");\n      };\n   }\n   function blog() {\n      if (document.querySelector(\".blog-section .swiper\"))\n         new Swiper(document.querySelector(\".blog-section .swiper\"), {\n            slidesPerView: 1,\n            // initialSlide: 2,\n            spaceBetween: 32,\n\n            pagination: {\n               el: \".blog-section .swiper-pagination\",\n               type: \"progressbar\",\n            },\n            navigation: {\n               prevEl: \".blog-section__header .prev\",\n               nextEl: \".blog-section__header .next\",\n            },\n         });\n   }\n   function fullControl() {\n      if (!document.querySelector(\"#full-control-select\")) return;\n      new Select(\"#full-control-select\", {\n         placeholder: \"Select your challenge\",\n         // selectedId: \"volg\",\n         data: [\n            {\n               id: \"challenge1zxz\",\n               value: \"challenge 1\",\n            },\n            {\n               id: \"challengeasdas\",\n               value: \"challenge 2\",\n            },\n            {\n               id: \"challengelklk\",\n               value: \"challenge 3\",\n            },\n         ],\n         onSelect(item, select) {\n            select.classList.add(\"filled\");\n         },\n      });\n   }\n   why();\n   blog();\n   fullControl();\n   tabs('input[name=\"home-optimize\"]', \".home-optimize__content > div\");\n   accordion(\".faq-section__subheader\", \".faq-section__collapse\");\n}\nfunction tabs(linkSelector, contentSelector) {\n   const inputs = document.querySelectorAll(linkSelector);\n   const contents = document.querySelectorAll(contentSelector);\n   let value;\n   if (inputs.length) {\n      inputs.forEach((item) => {\n         item.addEventListener(\"change\", () => {\n            if (item.checked) {\n               value = item.value;\n            }\n            contents.forEach((item) => {\n               item.classList.remove(\"active\");\n               if (item.getAttribute(\"data-tab\") == value) {\n                  item.classList.add(\"active\");\n               }\n            });\n         });\n      });\n   }\n}\nfunction accordion(linkSelector, contentSelector) {\n   // получаем линки\n   const openLinks = document.querySelectorAll(`${linkSelector}`);\n   // контенты\n   const contents = document.querySelectorAll(`${contentSelector}`);\n   if (openLinks.length > 0) {\n      for (let i = 0; i < openLinks.length; i++) {\n         let openLink = openLinks[i];\n         openLink.addEventListener(\"click\", () => {\n            // все прячем\n            for (let j = 0; j < contents.length; j++) {\n               // если хоть один открывается - return\n               if (contents[j].classList.contains(\"collapsing\")) {\n                  return;\n               } // Иначе\n               // все прячем\n               slideHide(contents[j]);\n            }\n            for (let j = 0; j < openLinks.length; j++) {\n               openLinks[j].classList.remove(\"active\");\n            }\n            // записываем в переменную нужный таб\n            let content = contents[i];\n            // работаем с классами линка\n            if (content.classList.contains(\"collapsing\")) {\n               return;\n            } else if (content.classList.contains(\"collapse_show\")) {\n               openLink.classList.remove(\"active\");\n            } else {\n               openLink.classList.add(\"active\");\n            }\n            // показываем нужный\n            slideShow(content);\n         });\n      }\n   }\n}\nfunction casesPage() {\n   const selects = document.querySelectorAll(\".cases-filters__selects label\");\n\n   if (!selects.length) return;\n   selects.forEach((select) => {\n      select.onclick = () => {\n         select.classList.toggle(\"active\");\n         let attr = select.getAttribute(\"for\");\n\n         const target = document.querySelector(`[data-value=\"${attr}\"]`);\n\n         target.classList.toggle(\"active\");\n      };\n   });\n}\nfunction casePage() {\n   const slider = document.querySelector(\".case-team__slider .swiper\");\n   if (!slider) return;\n   // Инициализация основного слайдера\n\n   // Инициализация слайдера с миниатюрами\n   let thumbs = new Swiper(\".case-team__thumbs .swiper\", {\n      slidesPerView: \"auto\",\n      spaceBetween: 12,\n      loop: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n   });\n   let main = new Swiper(slider, {\n      slidesPerView: 1,\n      spaceBetween: 12,\n      loop: true,\n      pagination: {\n         el: \".case-team__pagination\", // Указываем элемент для пагинации\n         type: \"custom\", // Используем кастомный тип\n         renderCustom: function (swiper, current, total) {\n            return `<span>${current}</span>/<span style=\"opacity: 0.3\">${total}</span>`; // Формат пагинации\n         },\n      },\n      navigation: {\n         prevEl: \".case-team .prev\",\n         nextEl: \".case-team .next\",\n      },\n      thumbs: {\n         swiper: thumbs,\n      },\n   });\n}\nfunction slideShow(el, duration = 500) {\n   // завершаем работу метода, если элемент содержит класс collapsing или collapse_show\n   if (\n      el.classList.contains(\"collapsing\") ||\n      el.classList.contains(\"collapse_show\")\n   ) {\n      return;\n   }\n   // удаляем класс collapse\n   el.classList.remove(\"collapse\");\n   // сохраняем текущую высоту элемента в константу height (это значение понадобится ниже)\n   const height = el.offsetHeight;\n   // устанавливаем высоте значение 0\n   el.style[\"height\"] = 0;\n   // не отображаем содержимое элемента, выходящее за его пределы\n   el.style[\"overflow\"] = \"hidden\";\n   // создание анимации скольжения с помощью CSS свойства transition\n   el.style[\"transition\"] = `height ${duration}ms ease`;\n   // добавляем класс collapsing\n   el.classList.add(\"collapsing\");\n   // получим значение высоты (нам этого необходимо для того, чтобы просто заставить браузер выполнить перерасчет макета, т.к. он не сможет нам вернуть правильное значение высоты, если не сделает это)\n   el.offsetHeight;\n   // установим в качестве значения высоты значение, которое мы сохранили в константу height\n   el.style[\"height\"] = `${height}px`;\n   // по истечении времени анимации this._duration\n   window.setTimeout(() => {\n      // удалим класс collapsing\n      el.classList.remove(\"collapsing\");\n      // добавим классы collapse и collapse_show\n      el.classList.add(\"collapse\");\n      el.classList.add(\"collapse_show\");\n      // удалим свойства height, transition и overflow\n      el.style[\"height\"] = \"\";\n      el.style[\"transition\"] = \"\";\n      el.style[\"overflow\"] = \"\";\n   }, duration);\n}\nfunction slideHide(el, duration = 500) {\n   // завершаем работу метода, если элемент содержит класс collapsing или collapse_show\n   if (\n      el.classList.contains(\"collapsing\") ||\n      !el.classList.contains(\"collapse_show\")\n   ) {\n      return;\n   }\n   // установим свойству height текущее значение высоты элемента\n   el.style[\"height\"] = `${el.offsetHeight}px`;\n   // получим значение высоты\n   el.offsetHeight;\n   // установим CSS свойству height значение 0\n   el.style[\"height\"] = 0;\n   // обрежем содержимое, выходящее за границы элемента\n   el.style[\"overflow\"] = \"hidden\";\n   // добавим CSS свойство transition для осуществления перехода длительностью this._duration\n   el.style[\"transition\"] = `height ${duration}ms ease`;\n   // удалим классы collapse и collapse_show\n   el.classList.remove(\"collapse\");\n   el.classList.remove(\"collapse_show\");\n   // добавим класс collapsing\n   el.classList.add(\"collapsing\");\n   // после завершения времени анимации\n   window.setTimeout(() => {\n      // удалим класс collapsing\n      el.classList.remove(\"collapsing\");\n      // добавим класс collapsing\n      el.classList.add(\"collapse\");\n      // удалим свойства height, transition и overflow\n      el.style[\"height\"] = \"\";\n      el.style[\"transition\"] = \"\";\n      el.style[\"overflow\"] = \"\";\n   }, duration);\n}\nfunction newsSection() {\n   if (!document.querySelector(\".news-section .swiper\")) return;\n   let slider = new Swiper(document.querySelector(\".news-section .swiper\"), {\n      slidesPerView: 1,\n      breakpoints: {\n         1025: {\n            slidesPerView: 4,\n            spaceBetween: 20,\n         },\n      },\n      navigation: {\n         prevEl: \".news-section .prev\",\n         nextEl: \".news-section .next\",\n      },\n   });\n   if (!document.querySelector(\".blog-what .swiper\")) return;\n   let slider2 = new Swiper(document.querySelector(\".blog-what .swiper\"), {\n      slidesPerView: 1,\n      breakpoints: {\n         1025: {\n            slidesPerView: 4,\n            spaceBetween: 20,\n         },\n      },\n      navigation: {\n         prevEl: \".blog-what .prev\",\n         nextEl: \".blog-what .next\",\n      },\n   });\n}\nclass Select {\n   constructor(selector, options) {\n      this.$el = document.querySelector(selector);\n      this.options = options;\n      this.selectedId = options.selectedId;\n\n      this.render();\n      this.setup();\n   }\n   render() {\n      this.$el.classList.add(\"select\");\n      const { placeholder, data, selectedId } = this.options;\n      this.$el.innerHTML = this.getTemplate(data, placeholder, selectedId);\n      if (placeholder) {\n         this.$el\n            .querySelector(`[data-type=\"input\"]`)\n            .classList.add(\"placeholder\");\n      }\n   }\n   setup() {\n      this.clickHandler = this.clickHandler.bind(this);\n      this.$el.addEventListener(\"click\", this.clickHandler);\n      this.$value = this.$el.querySelector(`[data-type=\"input\"] span`);\n   }\n   clickHandler(event) {\n      const { type } = event.target.dataset;\n      if (type === \"input\") {\n         this.toggle();\n      } else if (type === \"item\") {\n         const { id } = event.target.dataset;\n         this.select(id);\n      } else if (type === \"back\") {\n         this.toggle();\n      } else if (type === \"header\") {\n         this.toggle();\n      } else if (event.target.closest(\".select__header\")) [this.toggle()];\n   }\n   get current() {\n      return this.options.data.find((item) => item.id === this.selectedId);\n   }\n   select(id) {\n      this.$el\n         .querySelector(`[data-type=\"input\"]`)\n         .classList.remove(\"placeholder\");\n      this.selectedId = id;\n      console.log(this.$value);\n      this.$value.innerHTML = `<img src=\"${this.current.image}\"> ${this.current.value}`;\n      this.$el.querySelectorAll(`[data-type=\"item\"]`).forEach((item) => {\n         item.classList.remove(\"selected\");\n      });\n      this.$el\n         .querySelector(`[data-id =${this.current.id}]`)\n         .classList.add(\"selected\");\n      this.close();\n\n      if (this.options.onSelect) {\n         this.options.onSelect(this.current, this.$el);\n      }\n   }\n   open() {\n      this.$el.classList.add(\"open\");\n   }\n   close() {\n      this.$el.classList.remove(\"open\");\n   }\n   toggle() {\n      if (this.$el.classList.contains(\"open\")) {\n         this.close();\n      } else {\n         this.open();\n      }\n   }\n   getTemplate(data, placeholder = `<span></span>`, selectedId) {\n      const items = data.map((item) => {\n         let cls = \"\";\n         if (item.id === selectedId) {\n            placeholder = `<img src=\"${this.current.image}\"> ${this.current.value}`;\n            cls = \"selected\";\n         }\n         return `<li class=\"select__item ${cls}\" data-type=\"item\" data-id=\"${item.id}\"><img src=\"${item.image}\"> ${item.value}</li>`;\n      });\n      return `\n      <div class=\"select__header\" data-type=\"header\">\n      <div class=\"select__back\" data-type=\"back\"></div>\n      <div class=\"select__title\" data-type=\"input\">\n         <span>${placeholder}</span>\n         <svg width=\"24\" height=\"25\" viewBox=\"0 0 24 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M7 10.5L12.0008 15.08L17 10.5\" stroke=\"#323137\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n         </svg>\n\n    </div>\n      </div>\n      <div class=\"select__content\">\n         <ul class=\"select__list\">\n            ${items.join(\"\")}\n         </ul>\n      </div>\n      `;\n   }\n}\n"]}